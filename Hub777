-- ====== NoClip + WalkSpeed + SpawnPoint + Infinite Jump + Stun Movement ======
-- –ó–∞—â–∏—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –æ–±—Ö–æ–¥–æ–º –∞–Ω—Ç–∏—á–∏—Ç–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –∑–∞–≤–∏—Å–∞–Ω–∏–π

local player = game.Players.LocalPlayer
local uis = game:GetService("UserInputService")
local run = game:GetService("RunService")
local workspace = game:GetService("Workspace")
local ts = game:GetService("TweenService")
local debris = game:GetService("Debris")
local players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local CoreGui = game:GetService("CoreGui")

-- –ù–∞—Å—Ç—Ä–æ–π–∫–∏
local noclipEnabled = false
local infiniteJumpEnabled = false
local walkSpeed = 16
local jumpPower = 50
local floatAcceleration = 2.0  -- –£–º–µ–Ω—å—à–µ–Ω–æ –¥–ª—è –±–æ–ª–µ–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ–≥–æ –ø–æ–ª–µ—Ç–∞
local maxFloatSpeed = 50      -- –£–º–µ–Ω—å—à–µ–Ω–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å
local fastFallMultiplier = 3.0 -- –£–º–µ–Ω—å—à–µ–Ω –¥–ª—è –±–æ–ª–µ–µ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º–æ–≥–æ —Å–Ω–∏–∂–µ–Ω–∏—è
local stunnedMovementSpeed = 80
local stunnedAcceleration = 8.0

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
local character, hrp, humanoid
local isDragging = false
local dragStart = nil
local startPos = nil
local wasDragging = false
local dragConnection = nil
local activeSlider = nil
local mainFrameStartPos = nil
local savedWalkSpeed = walkSpeed
local lastSpeedCheck = 0
local speedCheckInterval = 0.2
local originalGravity = workspace.Gravity
local lastGroundPosition = nil
local noClipParts = {}

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ç–æ—á–∫–∏ —Å–ø–∞–≤–Ω–∞
local spawnPoint = nil
local isDead = false

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ –ø—Ä—ã–∂–∫–∞
local jumpHeld = false
local fastFallHeld = false
local noclipConnection = nil
local jumpConnection = nil
local floatVelocity = 0
local originalJumpPower = 50
local isJumping = false
local lastJumpState = false
local isOnGround = true
local initialJumpActivated = false
local targetFloatVelocity = 0
local transitionSpeed = 0.3  -- –£–º–µ–Ω—å—à–µ–Ω–∞ –¥–ª—è –±–æ–ª–µ–µ –ø–ª–∞–≤–Ω—ã—Ö –ø–µ—Ä–µ—Ö–æ–¥–æ–≤

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –¥–≤–∏–∂–µ–Ω–∏—è –≤ –æ–≥–ª—É—à–µ–Ω–∏–∏
local isStunned = false
local stunnedVelocity = Vector3.new(0, 0, 0)
local stunnedMovementConnection = nil

-- –ó–∞—â–∏—Ç–∞ –æ—Ç –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è
local heartbeatConnection
local renderSteppedConnection
local lastNoclipTime = 0
local noclipInterval = 0.05
local lastJumpTime = 0
local jumpInterval = 0.05
local lastSpeedChangeTime = 0
local speedChangeInterval = 0.2

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–ª–∞–≤–∏—à –ø—Ä—ã–∂–∫–∞
local function isJumpKey(keyCode)
    return keyCode == Enum.KeyCode.Space or 
           keyCode == Enum.KeyCode.ButtonA or 
           keyCode == Enum.KeyCode.ButtonL3
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–ª–∞–≤–∏—à –±—ã—Å—Ç—Ä–æ–≥–æ —Å–Ω–∏–∂–µ–Ω–∏—è
local function isFastFallKey(keyCode)
    return keyCode == Enum.KeyCode.LeftShift or 
           keyCode == Enum.KeyCode.RightShift or
           keyCode == Enum.KeyCode.LeftControl or 
           keyCode == Enum.KeyCode.RightControl
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–∑–∞—â–∏—â–µ–Ω–Ω–∞—è)
local function showNotification(text)
    local notificationGui = Instance.new("ScreenGui")
    notificationGui.Name = "NotificationGui_" .. math.random(100000, 999999)
    notificationGui.ResetOnSpawn = false
    notificationGui.IgnoreGuiInset = true
    notificationGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    -- –ü—ã—Ç–∞–µ–º—Å—è –¥–æ–±–∞–≤–∏—Ç—å –≤ CoreGui, –µ—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è - –≤ PlayerGui
    local success = pcall(function()
        notificationGui.Parent = CoreGui
    end)
    
    if not success then
        pcall(function()
            notificationGui.Parent = player:WaitForChild("PlayerGui")
        end)
    end
    
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 300, 0, 50)
    frame.Position = UDim2.new(0.5, -150, 0.85, 0)
    frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    frame.BackgroundTransparency = 0.2
    frame.BorderSizePixel = 0
    frame.Parent = notificationGui
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = frame
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 1, 0)
    label.Text = text
    label.TextColor3 = Color3.fromRGB(180, 180, 180)
    label.TextScaled = true
    label.Font = Enum.Font.SourceSans
    label.BackgroundTransparency = 1
    label.TextStrokeTransparency = 0.8
    label.Parent = frame
    
    frame.BackgroundTransparency = 0.5
    local fadeIn = ts:Create(frame, TweenInfo.new(0.3), {BackgroundTransparency = 0.2})
    fadeIn:Play()
    
    debris:AddItem(notificationGui, 3)
end

-- –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
local function getCharacter()
    return player.Character
end

-- –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏ –Ω–∞ —Ç–æ—á–∫—É —Å–ø–∞–≤–Ω–∞ (–∑–∞—â–∏—â–µ–Ω–Ω–∞—è)
local function teleportToSpawnPoint()
    if not spawnPoint or not character or not hrp then return end
    
    -- –ó–∞—â–∏—Ç–∞ –æ—Ç –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏
    local oldPosition = hrp.Position
    local oldCFrame = hrp.CFrame
    
    for i = 1, 3 do
        if hrp and hrp:IsDescendantOf(workspace) then
            local randomOffset = Vector3.new(
                math.random(-1, 1),
                0,
                math.random(-1, 1)
            )
            local newPosition = spawnPoint + randomOffset
            
            -- –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª–µ–µ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –º–µ—Ç–æ–¥ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏
            hrp.CFrame = CFrame.new(newPosition)
            
            -- –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏–∏
            wait(0.1)
            if (hrp.Position - newPosition).Magnitude < 5 then
                print("üêâ –¢–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏—è –Ω–∞ —Ç–æ—á–∫—É —Å–ø–∞–≤–Ω–∞: " .. tostring(newPosition))
                showNotification("–¢–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –Ω–∞ —Ç–æ—á–∫—É —Å–ø–∞–≤–Ω–∞")
                return
            end
        end
        wait(0.5)
    end
    
    -- –ï—Å–ª–∏ —Ç–µ–ª–µ–ø–æ—Ä—Ç–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–∞ —Å—Ç–∞—Ä—É—é –ø–æ–∑–∏—Ü–∏—é
    if hrp then
        hrp.CFrame = oldCFrame
    end
    print("üêâ –ù–µ —É–¥–∞–ª–æ—Å—å —Ç–µ–ª–µ–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ —Ç–æ—á–∫—É —Å–ø–∞–≤–Ω–∞")
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏ (–∑–∞—â–∏—â–µ–Ω–Ω–∞—è)
local function applyWalkSpeed()
    if not humanoid or not humanoid:IsDescendantOf(workspace) then return end
    
    local currentTime = tick()
    if currentTime - lastSpeedChangeTime < speedChangeInterval then return end
    lastSpeedChangeTime = currentTime
    
    -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    local originalSpeed = humanoid.WalkSpeed
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–æ –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏
    if originalSpeed ~= savedWalkSpeed then
        -- –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª–µ–µ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –º–µ—Ç–æ–¥ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏
        humanoid.WalkSpeed = savedWalkSpeed
        
        -- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ –∫–æ—Ä–æ—Ç–∫—É—é –∑–∞–¥–µ—Ä–∂–∫—É
        spawn(function()
            wait(0.05)
            if humanoid and humanoid.WalkSpeed ~= savedWalkSpeed then
                humanoid.WalkSpeed = savedWalkSpeed
            end
        end)
    end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è NoClip (–∑–∞—â–∏—â–µ–Ω–Ω–∞—è)
local function toggleNoClip(enabled)
    noclipEnabled = enabled
    
    if enabled then
        noClipParts = {}
        if character then
            for _, part in ipairs(character:GetDescendants()) do
                if part:IsA("BasePart") and part.CanCollide then
                    part.CanCollide = false
                    table.insert(noClipParts, part)
                end
            end
        end
        
        -- –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª–µ–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        if not noclipConnection then
            noclipConnection = run.Heartbeat:Connect(function()
                local currentTime = tick()
                if currentTime - lastNoclipTime < noclipInterval then return end
                lastNoclipTime = currentTime
                
                if character and noclipEnabled then
                    for _, part in ipairs(character:GetDescendants()) do
                        if part:IsA("BasePart") and part.CanCollide then
                            part.CanCollide = false
                            local found = false
                            for _, existingPart in ipairs(noClipParts) do
                                if existingPart == part then
                                    found = true
                                    break
                                end
                            end
                            if not found then
                                table.insert(noClipParts, part)
                            end
                        end
                    end
                end
            end)
        end
    else
        for _, part in ipairs(noClipParts) do
            if part and part:IsDescendantOf(workspace) then
                part.CanCollide = true
            end
        end
        noClipParts = {}
        
        if noclipConnection then
            noclipConnection:Disconnect()
            noclipConnection = nil
        end
    end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–≤–∏–∂–µ–Ω–∏—è –≤ –æ–≥–ª—É—à–µ–Ω–∏–∏ (–∑–∞—â–∏—â–µ–Ω–Ω–∞—è)
local function handleStunnedMovement()
    if not (isStunned and humanoid and hrp and not isDead) then return end
    
    local moveDirection = Vector3.new(0, 0, 0)
    
    local cameraCFrame = workspace.CurrentCamera.CFrame
    local forwardVector = cameraCFrame.LookVector
    local rightVector = cameraCFrame.RightVector
    
    forwardVector = Vector3.new(forwardVector.X, 0, forwardVector.Z).Unit
    rightVector = Vector3.new(rightVector.X, 0, rightVector.Z).Unit
    
    if uis:IsKeyDown(Enum.KeyCode.W) then
        moveDirection = moveDirection + forwardVector
    end
    if uis:IsKeyDown(Enum.KeyCode.S) then
        moveDirection = moveDirection - forwardVector
    end
    if uis:IsKeyDown(Enum.KeyCode.A) then
        moveDirection = moveDirection - rightVector
    end
    if uis:IsKeyDown(Enum.KeyCode.D) then
        moveDirection = moveDirection + rightVector
    end
    
    if uis:IsKeyDown(Enum.KeyCode.Space) then
        moveDirection = moveDirection + Vector3.new(0, 1, 0)
    end
    if uis:IsKeyDown(Enum.KeyCode.LeftControl) or uis:IsKeyDown(Enum.KeyCode.RightControl) then
        moveDirection = moveDirection + Vector3.new(0, -1, 0)
    end
    
    if moveDirection.Magnitude > 0 then
        moveDirection = moveDirection.Unit
        
        stunnedVelocity = stunnedVelocity + (moveDirection * stunnedAcceleration)
        
        if stunnedVelocity.Magnitude > stunnedMovementSpeed then
            stunnedVelocity = stunnedVelocity.Unit * stunnedMovementSpeed
        end
    else
        stunnedVelocity = stunnedVelocity * 0.9
    end
    
    -- –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª–µ–µ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –º–µ—Ç–æ–¥ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏
    hrp.Velocity = stunnedVelocity
end

-- –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –Ω–∞ –∑–µ–º–ª–µ –ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂
local function checkIfOnGround()
    if not hrp or not humanoid then return false end
    
    -- –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –ª—É—á–µ–π –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
    local raycastParams = RaycastParams.new()
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    raycastParams.FilterDescendantsInstances = {character}
    
    -- –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ª—É—á
    local origin = hrp.Position
    local direction = Vector3.new(0, -1, 0)
    local rayLength = humanoid.HipHeight + 0.2
    local rayResult = workspace:Raycast(origin, direction * rayLength, raycastParams)
    
    if rayResult then return true end
    
    -- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ª—É—á–∏ –ø–æ –∫—Ä–∞—è–º –¥–ª—è –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–æ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
    local offsetDistance = hrp.Size.X * 0.4
    local offsets = {
        Vector3.new(offsetDistance, 0, 0),
        Vector3.new(-offsetDistance, 0, 0),
        Vector3.new(0, 0, offsetDistance),
        Vector3.new(0, 0, -offsetDistance)
    }
    
    for _, offset in ipairs(offsets) do
        local offsetOrigin = origin + offset
        local offsetRayResult = workspace:Raycast(offsetOrigin, direction * rayLength, raycastParams)
        if offsetRayResult then return true end
    end
    
    return false
end

-- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ –ø—Ä—ã–∂–∫–∞
local function handleInfiniteJump()
    if infiniteJumpEnabled and humanoid and hrp and not isDead and not isStunned then
        local currentTime = tick()
        if currentTime - lastJumpTime < jumpInterval then return end
        lastJumpTime = currentTime
        
        -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞ –∑–µ–º–ª–µ –ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂
        isOnGround = checkIfOnGround()
        
        -- –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é —Å–∫–æ—Ä–æ—Å—Ç—å
        local currentVelocity = hrp.Velocity
        
        -- –ï—Å–ª–∏ Infinite Jump –≤–∫–ª—é—á–µ–Ω, –æ—Ç–∫–ª—é—á–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏—é
        if infiniteJumpEnabled then
            -- –û—Ç–∫–ª—é—á–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏—é
            workspace.Gravity = 0
            
            -- –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –ø—Ä–∏–º–µ–Ω—è—Ç—å –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å
            local shouldApplyVerticalVelocity = jumpHeld or fastFallHeld or (not isOnGround and floatVelocity ~= 0)
            
            if shouldApplyVerticalVelocity then
                -- –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–µ–ª–µ–≤—É—é –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å
                if fastFallHeld then
                    -- –ë—ã—Å—Ç—Ä–æ–µ —Å–Ω–∏–∂–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–∂–∞—Ç–æ–º Shift/Ctrl
                    targetFloatVelocity = -maxFloatSpeed * fastFallMultiplier
                    initialJumpActivated = true
                elseif jumpHeld then
                    -- –ü–æ–¥—ä–µ–º –ø—Ä–∏ –∑–∞–∂–∞—Ç–æ–º –ø—Ä–æ–±–µ–ª–µ
                    if isOnGround and not isJumping then
                        -- –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–¥—ä–µ–º —Å –∑–µ–º–ª–∏
                        if not initialJumpActivated then
                            targetFloatVelocity = maxFloatSpeed * 0.5  -- –ù–∞—á–∏–Ω–∞–µ–º —Å —É–º–µ—Ä–µ–Ω–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏
                            initialJumpActivated = true
                        else
                            targetFloatVelocity = maxFloatSpeed
                        end
                        isJumping = true
                    else
                        -- –í –≤–æ–∑–¥—É—Ö–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø–æ–¥—ä–µ–º
                        targetFloatVelocity = maxFloatSpeed
                    end
                else
                    -- –£–º–µ—Ä–µ–Ω–Ω–æ–µ —Å–Ω–∏–∂–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç–ø—É—â–µ–Ω–Ω—ã—Ö –∫–ª–∞–≤–∏—à–∞—Ö
                    if isOnGround and isJumping then
                        -- –ï—Å–ª–∏ –º—ã –Ω–∞ –∑–µ–º–ª–µ –∏ —Ä–∞–Ω–µ–µ –±—ã–ª–∏ –≤ –ø–æ–ª–µ—Ç–µ, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å
                        targetFloatVelocity = 0
                        isJumping = false
                        floatVelocity = 0  -- –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å –ø—Ä–∏ –ø—Ä–∏–∑–µ–º–ª–µ–Ω–∏–∏
                    else
                        -- –í –≤–æ–∑–¥—É—Ö–µ —Å–Ω–∏–∂–∞–µ–º—Å—è —Å —É–º–µ—Ä–µ–Ω–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç—å—é
                        targetFloatVelocity = -maxFloatSpeed * 0.3
                    end
                end
                
                -- –ü–ª–∞–≤–Ω–æ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Ü–µ–ª–µ–≤–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏
                floatVelocity = floatVelocity + (targetFloatVelocity - floatVelocity) * transitionSpeed
                
                -- –ü—Ä–∏–º–µ–Ω—è–µ–º –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å, —Å–æ—Ö—Ä–∞–Ω—è—è –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—É—é
                hrp.Velocity = Vector3.new(currentVelocity.X, floatVelocity, currentVelocity.Z)
            else
                -- –ï—Å–ª–∏ –º—ã –Ω–∞ –∑–µ–º–ª–µ –∏ –Ω–µ –Ω–∞–∂–∞—Ç—ã –∫–ª–∞–≤–∏—à–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ—Ç–æ–º
                if isOnGround and not jumpHeld and not fastFallHeld then
                    -- –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏—é –¥–ª—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è –ø–æ –∑–µ–º–ª–µ
                    workspace.Gravity = originalGravity
                    
                    -- –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å, —Å–æ—Ö—Ä–∞–Ω—è—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—É—é –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—É—é —Å–æ—Å—Ç–∞–≤–ª—è—é—â—É—é
                    hrp.Velocity = Vector3.new(currentVelocity.X, currentVelocity.Y, currentVelocity.Z)
                    
                    -- –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –∑–∞–≤–∏—Å–∞–Ω–∏—è
                    floatVelocity = 0
                    targetFloatVelocity = 0
                end
            end
        end
    else
        -- –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏—é, –µ—Å–ª–∏ Infinite Jump –≤—ã–∫–ª—é—á–µ–Ω
        if workspace.Gravity ~= originalGravity then
            workspace.Gravity = originalGravity
        end
    end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ–≥–ª—É—à–µ–Ω–∏—è
local function checkStunnedState()
    if not humanoid then return end
    
    local currentState = humanoid:GetState()
    local wasStunned = isStunned
    
    -- –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–≥–ª—É—à–µ–Ω–∏—è
    isStunned = (currentState == Enum.HumanoidStateType.Ragdoll or 
                currentState == Enum.HumanoidStateType.Physics)
    
    if wasStunned ~= isStunned then
        if isStunned then
            stunnedVelocity = hrp.Velocity
            showNotification("–í—ã –æ–≥–ª—É—à–µ–Ω—ã! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ WASD –∏ –ü—Ä–æ–±–µ–ª/Ctrl –¥–ª—è –ø–æ–ª–µ—Ç–∞.")
            
            if not stunnedMovementConnection then
                stunnedMovementConnection = run.Heartbeat:Connect(handleStunnedMovement)
            end
        else
            showNotification("–í—ã –≤—ã—à–ª–∏ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ–≥–ª—É—à–µ–Ω–∏—è.")
            
            if stunnedMovementConnection then
                stunnedMovementConnection:Disconnect()
                stunnedMovementConnection = nil
            end
            
            stunnedVelocity = Vector3.new(0, 0, 0)
        end
    end
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
local function setupCharacter()
    local success = pcall(function()
        character = getCharacter()
        if character and character:IsDescendantOf(workspace) then
            hrp = character:WaitForChild("HumanoidRootPart", 2)
            humanoid = character:WaitForChild("Humanoid", 2)
            if humanoid then
                -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Å–∏–ª—É –ø—Ä—ã–∂–∫–∞
                originalJumpPower = humanoid.JumpPower or 50
                
                applyWalkSpeed()
                
                humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
                    applyWalkSpeed()
                end)
                
                humanoid.StateChanged:Connect(function(oldState, newState)
                    -- –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –ø—Ä–∏–∑–µ–º–ª–µ–Ω–∏–µ –¥–ª—è —Å–±—Ä–æ—Å–∞ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏
                    if newState == Enum.HumanoidStateType.Landed and oldState ~= Enum.HumanoidStateType.Landed then
                        floatVelocity = 0
                        targetFloatVelocity = 0
                        isJumping = false
                        initialJumpActivated = false
                    end
                    checkStunnedState()
                end)
                
                if hrp then
                    lastGroundPosition = hrp.Position
                end
                
                if noclipEnabled then
                    toggleNoClip(true)
                end
                
                if infiniteJumpEnabled and not jumpConnection then
                    jumpConnection = run.Heartbeat:Connect(handleInfiniteJump)
                end
                
                checkStunnedState()
            end
        end
    end)
    if not success then
        character, hrp, humanoid = nil, nil, nil
    end
end

-- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ—è–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
player.CharacterAdded:Connect(function(newChar)
    character = newChar
    isDead = false
    floatVelocity = 0
    targetFloatVelocity = 0
    isJumping = false
    isOnGround = true
    initialJumpActivated = false
    
    wait(0.5)
    
    if character and character:IsDescendantOf(workspace) then
        hrp = character:WaitForChild("HumanoidRootPart", 2)
        humanoid = character:WaitForChild("Humanoid", 2)
        
        if humanoid then
            -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Å–∏–ª—É –ø—Ä—ã–∂–∫–∞
            originalJumpPower = humanoid.JumpPower or 50
            
            applyWalkSpeed()
            
            humanoid:GetPropertyChangedSignal("WalkSpeed"):Connect(function()
                applyWalkSpeed()
            end)
            
            humanoid.StateChanged:Connect(function(oldState, newState)
                -- –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –ø—Ä–∏–∑–µ–º–ª–µ–Ω–∏–µ –¥–ª—è —Å–±—Ä–æ—Å–∞ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏
                if newState == Enum.HumanoidStateType.Landed and oldState ~= Enum.HumanoidStateType.Landed then
                    floatVelocity = 0
                    targetFloatVelocity = 0
                    isJumping = false
                    initialJumpActivated = false
                end
                checkStunnedState()
            end)
            
            if hrp then
                lastGroundPosition = hrp.Position
            end
            
            humanoid.Died:Connect(function()
                isDead = true
                print("üêâ –ò–≥—Ä–æ–∫ —É–º–µ—Ä")
            end)
            
            if noclipEnabled then
                toggleNoClip(true)
            end
            
            if infiniteJumpEnabled and not jumpConnection then
                jumpConnection = run.Heartbeat:Connect(handleInfiniteJump)
            end
            
            checkStunnedState()
        end
        
        if spawnPoint then
            wait(0.2)
            teleportToSpawnPoint()
        end
    end
end)

-- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
setupCharacter()

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è GUI
local function createSafeGui()
    -- –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –≤ PlayerGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "DragonHubGui_" .. math.random(100000, 999999)
    screenGui.ResetOnSpawn = false
    screenGui.IgnoreGuiInset = true
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    screenGui.AutoLocalize = false
    
    local success = pcall(function()
        screenGui.Parent = player:WaitForChild("PlayerGui")
    end)
    
    -- –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å, –ø—Ä–æ–±—É–µ–º CoreGui
    if not success then
        success = pcall(function()
            screenGui.Parent = CoreGui
        end)
    end
    
    -- –ï—Å–ª–∏ –∏ —ç—Ç–æ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ, –ø—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ StarterGui
    if not success then
        success = pcall(function()
            screenGui.Parent = game:GetService("StarterGui")
        end)
    end
    
    -- –ï—Å–ª–∏ –≤—Å–µ –º–µ—Ç–æ–¥—ã –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º ReplicatedStorage
    if not success then
        success = pcall(function()
            screenGui.Parent = ReplicatedStorage
        end)
    end
    
    return screenGui, success
end

-- –°–æ–∑–¥–∞–Ω–∏–µ GUI —Å –æ–±—Ö–æ–¥–æ–º –∑–∞—â–∏—Ç—ã
local screenGui, guiCreated = createSafeGui()

if not guiCreated then
    warn("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å GUI. –°–∫—Ä–∏–ø—Ç –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –±–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.")
else
    -- –°—Ç–∏–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å–∫–∞
    local hubPanel = Instance.new("TextButton")
    hubPanel.Name = "HubPanel_" .. math.random(100000, 999999)
    hubPanel.Size = UDim2.new(0, 140, 0, 35)
    hubPanel.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
    hubPanel.Active = true
    hubPanel.Draggable = false
    hubPanel.Position = UDim2.new(0.5, 80, 0.5, -60)
    hubPanel.Parent = screenGui
    hubPanel.Text = ""

    local hubCorner = Instance.new("UICorner")
    hubCorner.CornerRadius = UDim.new(0, 8)
    hubCorner.Parent = hubPanel

    local hubGradient = Instance.new("UIGradient")
    hubGradient.Rotation = 90
    hubGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(45, 45, 65)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(25, 25, 35))
    })
    hubGradient.Parent = hubPanel

    local hubLabel = Instance.new("TextLabel")
    hubLabel.Size = UDim2.new(1, 0, 1, 0)
    hubLabel.Position = UDim2.new(0, 0, 0, 0)
    hubLabel.Text = "üêâ Dragon Hub"
    hubLabel.BackgroundTransparency = 1
    hubLabel.TextColor3 = Color3.fromRGB(255, 215, 0)
    hubLabel.TextXAlignment = Enum.TextXAlignment.Center
    hubLabel.TextYAlignment = Enum.TextYAlignment.Center
    hubLabel.Font = Enum.Font.SourceSansBold
    hubLabel.TextSize = 16
    hubLabel.TextStrokeTransparency = 0.8
    hubLabel.Parent = hubPanel

    -- –û—Å–Ω–æ–≤–Ω–æ–π —Ñ—Ä–µ–π–º
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame_" .. math.random(100000, 999999)
    mainFrame.Size = UDim2.new(0, 250, 0, 230)
    mainFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    mainFrame.Active = true
    mainFrame.Draggable = true
    mainFrame.Visible = false
    mainFrame.Parent = screenGui

    local mainCorner = Instance.new("UICorner")
    mainCorner.CornerRadius = UDim.new(0, 12)
    mainCorner.Parent = mainFrame

    local mainGradient = Instance.new("UIGradient")
    mainGradient.Rotation = 90
    mainGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(20, 20, 20)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 0))
    })
    mainGradient.Parent = mainFrame

    -- –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –¥—Ä–∞–∫–æ–Ω–æ–º
    local titleBackground = Instance.new("Frame")
    titleBackground.Name = "TitleBackground_" .. math.random(100000, 999999)
    titleBackground.Size = UDim2.new(1, 0, 0, 40)
    titleBackground.Position = UDim2.new(0, 0, 0, 0)
    titleBackground.BackgroundColor3 = Color3.fromRGB(255, 215, 0)
    titleBackground.BorderSizePixel = 0
    titleBackground.Parent = mainFrame

    local titleCorner = Instance.new("UICorner")
    titleCorner.CornerRadius = UDim.new(0, 12)
    titleCorner.Parent = titleBackground

    local titleGradient = Instance.new("UIGradient")
    titleGradient.Rotation = 90
    titleGradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 225, 50)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 200, 0))
    })
    titleGradient.Parent = titleBackground

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Name = "TitleLabel_" .. math.random(100000, 999999)
    titleLabel.Size = UDim2.new(1, -40, 0, 30)
    titleLabel.Position = UDim2.new(0, 15, 0, 5)
    titleLabel.Text = "üêâ DRAGON HUB üêâ"
    titleLabel.BackgroundTransparency = 1
    titleLabel.TextColor3 = Color3.fromRGB(40, 40, 40)
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.TextYAlignment = Enum.TextYAlignment.Center
    titleLabel.Font = Enum.Font.SourceSansBold
    titleLabel.TextSize = 18
    titleLabel.TextStrokeTransparency = 0.8
    titleLabel.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.Parent = mainFrame

    -- –ö—Ä–µ—Å—Ç–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è
    local closeButton = Instance.new("TextButton")
    closeButton.Name = "CloseButton_" .. math.random(100000, 999999)
    closeButton.Size = UDim2.new(0, 30, 0, 30)
    closeButton.Position = UDim2.new(1, -35, 0, 5)
    closeButton.Text = "√ó"
    closeButton.BackgroundColor3 = Color3.fromRGB(220, 100, 100)
    closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeButton.Font = Enum.Font.SourceSansBold
    closeButton.TextSize = 24
    closeButton.Parent = mainFrame

    local closeCorner = Instance.new("UICorner")
    closeCorner.CornerRadius = UDim.new(0, 6)
    closeCorner.Parent = closeButton

    closeButton.MouseEnter:Connect(function()
        ts:Create(closeButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(240, 120, 120)}):Play()
    end)

    closeButton.MouseLeave:Connect(function()
        ts:Create(closeButton, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(220, 100, 100)}):Play()
    end)

    -- –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫
    local function createButton(text, position, icon)
        -- –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–Ω–æ–ø–∫–∏
        local buttonContainer = Instance.new("Frame")
        buttonContainer.Name = "ButtonContainer_" .. math.random(100000, 999999)
        buttonContainer.Size = UDim2.new(0, 220, 0, 35)
        buttonContainer.Position = position
        buttonContainer.BackgroundTransparency = 1
        buttonContainer.Parent = mainFrame
        
        -- –°–æ–∑–¥–∞–µ–º —Ñ–æ–Ω –∫–Ω–æ–ø–∫–∏
        local buttonBackground = Instance.new("Frame")
        buttonBackground.Name = "ButtonBackground_" .. math.random(100000, 999999)
        buttonBackground.Size = UDim2.new(1, 0, 1, 0)
        buttonBackground.Position = UDim2.new(0, 0, 0, 0)
        buttonBackground.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
        buttonBackground.BorderSizePixel = 0
        buttonBackground.Parent = buttonContainer
        
        local buttonCorner = Instance.new("UICorner")
        buttonCorner.CornerRadius = UDim.new(0, 8)
        buttonCorner.Parent = buttonBackground
        
        -- –°–æ–∑–¥–∞–µ–º —Ä–∞–º–∫—É –¥–ª—è –ø–æ–¥—Å–≤–µ—Ç–∫–∏
        local highlightFrame = Instance.new("Frame")
        highlightFrame.Name = "HighlightFrame_" .. math.random(100000, 999999)
        highlightFrame.Size = UDim2.new(1, 0, 1, 0)
        highlightFrame.Position = UDim2.new(0, 0, 0, 0)
        highlightFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        highlightFrame.BackgroundTransparency = 1
        highlightFrame.BorderSizePixel = 0
        highlightFrame.ZIndex = 2
        highlightFrame.Parent = buttonContainer
        
        local highlightCorner = Instance.new("UICorner")
        highlightCorner.CornerRadius = UDim.new(0, 8)
        highlightCorner.Parent = highlightFrame
        
        -- –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
        local buttonText = Instance.new("TextLabel")
        buttonText.Name = "ButtonText_" .. math.random(100000, 999999)
        buttonText.Size = UDim2.new(1, 0, 1, 0)
        buttonText.Position = UDim2.new(0, 0, 0, 0)
        buttonText.Text = icon .. " " .. text
        buttonText.BackgroundTransparency = 1
        buttonText.TextColor3 = Color3.fromRGB(255, 255, 255)
        buttonText.TextXAlignment = Enum.TextXAlignment.Center
        buttonText.TextYAlignment = Enum.TextYAlignment.Center
        buttonText.Font = Enum.Font.SourceSansBold
        buttonText.TextSize = 14
        buttonText.ZIndex = 3
        buttonText.Parent = buttonContainer
        
        -- –°–æ–∑–¥–∞–µ–º –Ω–µ–≤–∏–¥–∏–º—É—é –∫–Ω–æ–ø–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–∏–∫–æ–≤
        local clickButton = Instance.new("TextButton")
        clickButton.Name = "ClickButton_" .. math.random(100000, 999999)
        clickButton.Size = UDim2.new(1, 0, 1, 0)
        clickButton.Position = UDim2.new(0, 0, 0, 0)
        clickButton.BackgroundTransparency = 1
        clickButton.Text = ""
        clickButton.ZIndex = 4
        clickButton.Parent = buttonContainer
        
        -- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏—è –¥–ª—è –ø–æ–¥—Å–≤–µ—Ç–∫–∏ —Ä–∞–º–∫–∏
        clickButton.MouseEnter:Connect(function()
            highlightFrame.BackgroundTransparency = 0.7
        end)
        
        clickButton.MouseLeave:Connect(function()
            highlightFrame.BackgroundTransparency = 1
        end)
        
        return buttonContainer, buttonBackground, buttonText, clickButton
    end

    -- –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
    local noclipButton, noclipBackground, noclipText, noclipClick = createButton("NoClip: OFF", UDim2.new(0, 15, 0, 50), "üö∑")
    local infiniteJumpButton, infiniteJumpBackground, infiniteJumpText, infiniteJumpClick = createButton("Infinite Jump: OFF", UDim2.new(0, 15, 0, 90), "üöÄ")
    local setSpawnButton, setSpawnBackground, setSpawnText, setSpawnClick = createButton("Set Spawn Point", UDim2.new(0, 15, 0, 130), "üìç")

    -- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–ª–∞–π–¥–µ—Ä–æ–≤
    local function createSlider(name, position, minValue, maxValue, defaultValue)
        local sliderFrame = Instance.new("Frame")
        sliderFrame.Name = "SliderFrame_" .. math.random(100000, 999999)
        sliderFrame.Size = UDim2.new(0, 220, 0, 50)
        sliderFrame.Position = position
        sliderFrame.BackgroundTransparency = 1
        sliderFrame.Parent = mainFrame
        
        local sliderLabel = Instance.new("TextLabel")
        sliderLabel.Name = "SliderLabel_" .. math.random(100000, 999999)
        sliderLabel.Size = UDim2.new(1, 0, 0, 25)
        sliderLabel.Position = UDim2.new(0, 0, 0, 0)
        sliderLabel.Text = name
        sliderLabel.BackgroundTransparency = 1
        sliderLabel.TextColor3 = Color3.fromRGB(255, 215, 0)
        sliderLabel.TextXAlignment = Enum.TextXAlignment.Left
        sliderLabel.Font = Enum.Font.GothamBold
        sliderLabel.TextSize = 16
        sliderLabel.TextStrokeTransparency = 0.7
        sliderLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
        sliderLabel.Parent = sliderFrame
        
        local sliderBackground = Instance.new("Frame")
        sliderBackground.Name = "SliderBackground_" .. math.random(100000, 999999)
        sliderBackground.Size = UDim2.new(1, 0, 0, 10)
        sliderBackground.Position = UDim2.new(0, 0, 0, 30)
        sliderBackground.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        sliderBackground.BorderSizePixel = 0
        sliderBackground.Parent = sliderFrame
        
        local sliderCorner = Instance.new("UICorner")
        sliderCorner.CornerRadius = UDim.new(0, 5)
        sliderCorner.Parent = sliderBackground
        
        local sliderFill = Instance.new("Frame")
        sliderFill.Name = "SliderFill_" .. math.random(100000, 999999)
        sliderFill.Size = UDim2.new((defaultValue - minValue) / (maxValue - minValue), 0, 1, 0)
        sliderFill.Position = UDim2.new(0, 0, 0, 0)
        sliderFill.BackgroundColor3 = Color3.fromRGB(255, 180, 0)
        sliderFill.BorderSizePixel = 0
        sliderFill.Parent = sliderBackground
        
        local fillCorner = Instance.new("UICorner")
        fillCorner.CornerRadius = UDim.new(0, 5)
        fillCorner.Parent = sliderFill
        
        local fillGradient = Instance.new("UIGradient")
        fillGradient.Name = "FillGradient_" .. math.random(100000, 999999)
        fillGradient.Rotation = 90
        fillGradient.Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 200, 0)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 150, 0))
        })
        fillGradient.Parent = sliderFill
        
        local sliderValue = Instance.new("TextLabel")
        sliderValue.Name = "SliderValue_" .. math.random(100000, 999999)
        sliderValue.Size = UDim2.new(0, 50, 0, 25)
        sliderValue.Position = UDim2.new(1, -50, 0, 0)
        sliderValue.Text = tostring(defaultValue)
        sliderValue.BackgroundTransparency = 1
        sliderValue.TextColor3 = Color3.fromRGB(255, 215, 0)
        sliderValue.TextXAlignment = Enum.TextXAlignment.Right
        sliderValue.Font = Enum.Font.GothamBold
        sliderValue.TextSize = 16
        sliderValue.TextStrokeTransparency = 0.7
        sliderValue.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
        sliderValue.Parent = sliderFrame
        
        return sliderFrame, sliderFill, sliderValue, sliderBackground
    end

    -- –°–æ–∑–¥–∞–µ–º —Å–ª–∞–π–¥–µ—Ä –¥–ª—è WalkSpeed
    local walkSpeedSlider, walkSpeedFill, walkSpeedValue, walkSpeedBg = createSlider("Walk Speed:", UDim2.new(0, 15, 0, 170), 16, 200, walkSpeed)

    -- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    hubPanel.MouseButton1Click:Connect(function()
        if wasDragging then
            wasDragging = false
            return
        end
        mainFrame.Visible = true
        hubPanel.Visible = false
        mainFrame.Position = UDim2.new(0.5, 100, 0.5, -mainFrame.AbsoluteSize.Y/2)
    end)

    closeButton.MouseButton1Click:Connect(function()
        mainFrame.Visible = false
        hubPanel.Visible = true
    end)

    hubPanel.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            isDragging = true
            wasDragging = false
            dragStart = input.Position
            startPos = hubPanel.Position
            
            if mainFrame.Visible then
                mainFrame.Draggable = false
            end
            
            if dragConnection then
                dragConnection:Disconnect()
            end
            
            dragConnection = uis.InputChanged:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseMovement and isDragging then
                    local delta = input.Position - dragStart
                    hubPanel.Position = UDim2.new(
                        startPos.X.Scale, 
                        startPos.X.Offset + delta.X, 
                        startPos.Y.Scale, 
                        startPos.Y.Offset + delta.Y
                    )
                    if math.abs(delta.X) > 5 or math.abs(delta.Y) > 5 then
                        wasDragging = true
                    end
                end
            end)
        end
    end)

    uis.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 and isDragging then
            isDragging = false
            if mainFrame.Visible then
                mainFrame.Draggable = true
            end
            if dragConnection then
                dragConnection:Disconnect()
                dragConnection = nil
            end
        end
    end)

    -- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫
    noclipClick.MouseButton1Click:Connect(function()
        noclipEnabled = not noclipEnabled
        toggleNoClip(noclipEnabled)
        
        if noclipEnabled then
            noclipText.Text = "üö∑ NoClip: ON"
            noclipBackground.BackgroundColor3 = Color3.fromRGB(0, 100, 0)
            showNotification("NoClip –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! –ü—Ä–æ—Ö–æ–¥–∏ —Å–∫–≤–æ–∑—å —Å—Ç–µ–Ω—ã.")
        else
            noclipText.Text = "üö∑ NoClip: OFF"
            noclipBackground.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
            showNotification("NoClip –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.")
        end
        
        -- –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        local settings = player:WaitForChild("PlayerGui"):FindFirstChild("DragonHubSettings")
        if settings then
            local noClipValue = settings:FindFirstChild("NoClipEnabled")
            if noClipValue then
                noClipValue.Value = noclipEnabled
            end
        end
    end)

    infiniteJumpClick.MouseButton1Click:Connect(function()
        infiniteJumpEnabled = not infiniteJumpEnabled
        if infiniteJumpEnabled then
            infiniteJumpText.Text = "üöÄ Infinite Jump: ON"
            infiniteJumpBackground.BackgroundColor3 = Color3.fromRGB(0, 100, 0)
            showNotification("üöÄ Infinite Jump –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω! –ü—Ä–æ–±–µ–ª - –ø–æ–¥—ä–µ–º, Shift/Ctrl - –±—ã—Å—Ç—Ä–æ–µ —Å–Ω–∏–∂–µ–Ω–∏–µ.")
            
            -- –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏
            floatVelocity = 0
            targetFloatVelocity = 0
            isJumping = false
            initialJumpActivated = false
            
            -- –û—Ç–∫–ª—é—á–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—Ä—ã–∂–æ–∫ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ Infinite Jump
            if humanoid then
                humanoid.JumpPower = 0
            end
            
            if not jumpConnection then
                jumpConnection = run.Heartbeat:Connect(handleInfiniteJump)
            end
        else
            infiniteJumpText.Text = "üöÄ Infinite Jump: OFF"
            infiniteJumpBackground.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
            showNotification("üöÄ Infinite Jump –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.")
            
            if jumpConnection then
                jumpConnection:Disconnect()
                jumpConnection = nil
            end
            
            -- –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é —Å–∏–ª—É –ø—Ä—ã–∂–∫–∞ –∏ –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏—é
            if humanoid then
                humanoid.JumpPower = originalJumpPower
            end
            workspace.Gravity = originalGravity
            
            floatVelocity = 0
            targetFloatVelocity = 0
            isJumping = false
            initialJumpActivated = false
        end
        
        -- –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        local settings = player:WaitForChild("PlayerGui"):FindFirstChild("DragonHubSettings")
        if settings then
            local infiniteJumpValue = settings:FindFirstChild("InfiniteJumpEnabled")
            if infiniteJumpValue then
                infiniteJumpValue.Value = infiniteJumpEnabled
            end
        end
    end)

    setSpawnClick.MouseButton1Click:Connect(function()
        if hrp then
            spawnPoint = hrp.Position
            lastGroundPosition = hrp.Position
            showNotification("–¢–æ—á–∫–∞ —Å–ø–∞–≤–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
            print("üêâ –¢–æ—á–∫–∞ —Å–ø–∞–≤–Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: " .. tostring(spawnPoint))
        else
            showNotification("–ü–µ—Ä—Å–æ–Ω–∞–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        end
    end)

    -- –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ª–∞–π–¥–µ—Ä–∞
    walkSpeedBg.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            activeSlider = "walkSpeed"
            mainFrameStartPos = mainFrame.Position
            mainFrame.Draggable = false
        end
    end)

    uis.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement and activeSlider then
            if mainFrameStartPos and mainFrame.Position ~= mainFrameStartPos then
                mainFrame.Position = mainFrameStartPos
            end
            
            local mousePos = uis:GetMouseLocation()
            local sliderBg = walkSpeedBg
            local sliderFill = walkSpeedFill
            local sliderValue = walkSpeedValue
            local minValue = 16
            local maxValue = 200
            
            local relativeX = (mousePos.X - sliderBg.AbsolutePosition.X) / sliderBg.AbsoluteSize.X
            relativeX = math.clamp(relativeX, 0, 1)
            
            ts:Create(sliderFill, TweenInfo.new(0.1), {Size = UDim2.new(relativeX, 0, 1, 0)}):Play()
            
            local value = math.floor(minValue + relativeX * (maxValue - minValue))
            sliderValue.Text = tostring(value)
            
            walkSpeed = value
            savedWalkSpeed = value
            applyWalkSpeed()
        end
    end)

    uis.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            activeSlider = nil
            mainFrameStartPos = nil
            mainFrame.Draggable = true
            
            -- –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–∫–æ—Ä–æ—Å—Ç–∏
            if activeSlider == "walkSpeed" then
                local settings = player:WaitForChild("PlayerGui"):FindFirstChild("DragonHubSettings")
                if settings then
                    local walkSpeedValue = settings:FindFirstChild("WalkSpeed")
                    if walkSpeedValue then
                        walkSpeedValue.Value = walkSpeed
                    end
                end
            end
        end
    end)
end

-- –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à –ø—Ä—ã–∂–∫–∞
uis.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed then
        if isJumpKey(input.KeyCode) then
            jumpHeld = true
            
            -- –ü–æ–ª–Ω–æ—Å—Ç—å—é –±–ª–æ–∫–∏—Ä—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—Ä—ã–∂–æ–∫ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω–æ–º Infinite Jump
            if infiniteJumpEnabled and humanoid then
                humanoid.JumpPower = 0
            end
        elseif isFastFallKey(input.KeyCode) then
            fastFallHeld = true
        end
    end
end)

uis.InputEnded:Connect(function(input, gameProcessed)
    if not gameProcessed then
        if isJumpKey(input.KeyCode) then
            jumpHeld = false
        elseif isFastFallKey(input.KeyCode) then
            fastFallHeld = false
        end
    end
end)

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –Ω–∞ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏
local function isOnSurface()
    if not hrp or not humanoid then return false end
    
    local raycastParams = RaycastParams.new()
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    raycastParams.FilterDescendantsInstances = {character}
    
    local origin = hrp.Position
    local direction = Vector3.new(0, -1, 0)
    local rayLength = humanoid.HipHeight + 0.1
    local rayResult = workspace:Raycast(origin, direction * rayLength, raycastParams)
    
    return rayResult ~= nil
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø—Ä–∏–∑–µ–º–ª–µ–Ω–∏—è
local function safeLanding()
    if not hrp or not humanoid then return end
    
    local raycastParams = RaycastParams.new()
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    raycastParams.FilterDescendantsInstances = {character}
    
    local origin = hrp.Position
    local direction = Vector3.new(0, -1, 0)
    local rayLength = humanoid.HipHeight + 5
    local rayResult = workspace:Raycast(origin, direction * rayLength, raycastParams)
    
    if rayResult then
        local targetPosition = rayResult.Position + Vector3.new(0, humanoid.HipHeight, 0)
        local lookDirection = hrp.CFrame.LookVector
        hrp.CFrame = CFrame.new(targetPosition, targetPosition + lookDirection)
        
        lastGroundPosition = targetPosition
        return true
    end
    
    return false
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –Ω–µ –∑–∞—Å—Ç—Ä—è–ª –ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂ –≤ –æ–±—ä–µ–∫—Ç–µ
local function checkIfStuck()
    if not hrp or not humanoid then return false end
    
    local raycastParams = RaycastParams.new()
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    raycastParams.FilterDescendantsInstances = {character}
    
    local directions = {
        Vector3.new(1, 0, 0),
        Vector3.new(-1, 0, 0),
        Vector3.new(0, 0, 1),
        Vector3.new(0, 0, -1),
        Vector3.new(0, 1, 0),
        Vector3.new(0, -1, 0)
    }
    
    local stuckCount = 0
    for _, dir in pairs(directions) do
        local rayResult = workspace:Raycast(hrp.Position, dir * 3, raycastParams)
        if rayResult then
            stuckCount = stuckCount + 1
        end
    end
    
    return stuckCount >= 4
end

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∏–∑ –∑–∞—Å—Ç—Ä–µ–≤–∞–Ω–∏—è
local function freeFromStuck()
    if not hrp or not humanoid then return end
    
    local raycastParams = RaycastParams.new()
    raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
    raycastParams.FilterDescendantsInstances = {character}
    
    local directions = {
        Vector3.new(1, 0, 0),
        Vector3.new(-1, 0, 0),
        Vector3.new(0, 0, 1),
        Vector3.new(0, 0, -1),
        Vector3.new(0, 1, 0),
        Vector3.new(0, -1, 0)
    }
    
    for _, dir in pairs(directions) do
        local rayResult = workspace:Raycast(hrp.Position, dir * 10, raycastParams)
        if not rayResult then
            local targetPosition = hrp.Position + dir * 5
            hrp.CFrame = CFrame.new(targetPosition, targetPosition + workspace.CurrentCamera.CFrame.LookVector)
            showNotification("–û—Å–≤–æ–±–æ–∂–¥–µ–Ω –∏–∑ –∑–∞—Å—Ç—Ä–µ–≤–∞–Ω–∏—è")
            return true
        end
    end
    
    if spawnPoint then
        teleportToSpawnPoint()
        return true
    end
    
    return false
end

-- –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–∞—Å—Ç—Ä–µ–≤–∞–Ω–∏–µ
spawn(function()
    while true do
        wait(2)
        
        if character and humanoid and not isDead then
            if checkIfStuck() then
                freeFromStuck()
            end
        end
    end
end)

-- –°–∏—Å—Ç–µ–º–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
local function saveSettings()
    -- –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
    local settings = Instance.new("Folder")
    settings.Name = "DragonHubSettings_" .. math.random(100000, 999999)
    
    -- –ü—ã—Ç–∞–µ–º—Å—è –¥–æ–±–∞–≤–∏—Ç—å –≤ CoreGui, –µ—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è - –≤ PlayerGui
    local success = pcall(function()
        settings.Parent = CoreGui
    end)
    
    if not success then
        pcall(function()
            settings.Parent = player:WaitForChild("PlayerGui")
        end)
    end
    
    -- –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    local walkSpeedValue = Instance.new("NumberValue")
    walkSpeedValue.Name = "WalkSpeed"
    walkSpeedValue.Value = walkSpeed
    walkSpeedValue.Parent = settings
    
    local infiniteJumpValue = Instance.new("BoolValue")
    infiniteJumpValue.Name = "InfiniteJumpEnabled"
    infiniteJumpValue.Value = infiniteJumpEnabled
    infiniteJumpValue.Parent = settings
    
    local noClipValue = Instance.new("BoolValue")
    noClipValue.Name = "NoClipEnabled"
    noClipValue.Value = noclipEnabled
    noClipValue.Parent = settings
end

-- –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
local function loadSettings()
    local settings = nil
    
    -- –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ CoreGui
    local success = pcall(function()
        settings = CoreGui:FindFirstChild("DragonHubSettings")
    end)
    
    -- –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, –ø—Ä–æ–±—É–µ–º –≤ PlayerGui
    if not settings then
        pcall(function()
            settings = player:WaitForChild("PlayerGui"):FindFirstChild("DragonHubSettings")
        end)
    end
    
    if settings then
        -- –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        local walkSpeedValue = settings:FindFirstChild("WalkSpeed")
        if walkSpeedValue then
            walkSpeed = walkSpeedValue.Value
            savedWalkSpeed = walkSpeed
            
            -- –û–±–Ω–æ–≤–ª—è–µ–º —Å–ª–∞–π–¥–µ—Ä, –µ—Å–ª–∏ GUI —Å–æ–∑–¥–∞–Ω
            if guiCreated and walkSpeedValue then
                walkSpeedValue.Text = tostring(walkSpeed)
                
                local minValue = 16
                local maxValue = 200
                local relativeX = (walkSpeed - minValue) / (maxValue - minValue)
                if walkSpeedFill then
                    walkSpeedFill.Size = UDim2.new(relativeX, 0, 1, 0)
                end
            end
        end
        
        local infiniteJumpValue = settings:FindFirstChild("InfiniteJumpEnabled")
        if infiniteJumpValue then
            infiniteJumpEnabled = infiniteJumpValue.Value
            if infiniteJumpEnabled then
                if guiCreated and infiniteJumpText then
                    infiniteJumpText.Text = "üöÄ Infinite Jump: ON"
                end
                if guiCreated and infiniteJumpBackground then
                    infiniteJumpBackground.BackgroundColor3 = Color3.fromRGB(0, 100, 0)
                end
                
                -- –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
                floatVelocity = 0
                targetFloatVelocity = 0
                isJumping = false
                initialJumpActivated = false
                
                -- –û—Ç–∫–ª—é—á–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø—Ä—ã–∂–æ–∫ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ Infinite Jump
                if humanoid then
                    humanoid.JumpPower = 0
                end
                
                if not jumpConnection then
                    jumpConnection = run.Heartbeat:Connect(handleInfiniteJump)
                end
            end
        end
        
        local noClipValue = settings:FindFirstChild("NoClipEnabled")
        if noClipValue then
            noclipEnabled = noClipValue.Value
            if noclipEnabled then
                if guiCreated and noclipText then
                    noclipText.Text = "üö∑ NoClip: ON"
                end
                if guiCreated and noclipBackground then
                    noclipBackground.BackgroundColor3 = Color3.fromRGB(0, 100, 0)
                end
                toggleNoClip(true)
            end
        end
    else
        -- –ï—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –∏—Ö –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        saveSettings()
    end
end

-- –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
spawn(function()
    wait(1) -- –ñ–¥–µ–º, —á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –≤—Å–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
    loadSettings()
end)

-- –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
showNotification("üöÄ Dragon Hub –∑–∞–≥—Ä—É–∂–µ–Ω (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)")

